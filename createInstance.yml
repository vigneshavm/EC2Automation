---
-
  connection: local
  hosts: localhost
  name: "Provision an EC2 Instance"
  vars:
      count: 1
      instance_type: t2.micro
      keypair: stageNeols
      region: ca-central-1
      security_group: webserver

  tasks:
    -
      local_action:
        description: "Security Group for webserver Servers"
        module: ec2_group
        name: "{{ security_group }}"
        region: ca-central-1
        rules:
          -
            cidr_ip: 0.0.0.0/0
            from_port: 80
            proto: tcp
            to_port: 85
          -
            cidr_ip: 0.0.0.0/0
            from_port: 22
            proto: tcp
            to_port: 22
        rules_egress:
          -
            cidr_ip: 0.0.0.0/0
            proto: all
      name: "Create a security group"
      register: my_security_group

    -
      local_action:
        count: 1
        group_id: "{{ my_security_group.group_id }}"
        instance_type: "{{ instance_type }}"
        image: ami-270e8b43
        wait: true
        region: "{{ region }}"
        key_name: "{{ keypair }}"
        module: ec2
      name: "Create a Instance"
      register: ec2

    - name: Add new instance to host group
      add_host: hostname={{ item.public_ip }} groupname=launched
      with_items: ec2.instances


    - name: Wait for SSH to come up
      local_action: wait_for
                          host={{ item.public_ip }}
                          port=22
                          state=started
      with_items: ec2.instances


    - name: Add tag to Instance(s)
      local_action: ec2_tag
                         resource={{ item.id }}
                         region={{ region }}
                         state=present
      with_items: ec2.instances
      args:
        tags:
          Name: webserver
-

  hosts: launched
  name: "launched an EC2 Instance"
  remote_user: ubuntu
  gather_facts: false
  sudo: false

  vars:
    ansible_ssh_private_key_file: "/home/ubuntu/stageNeols.pem"
    isDev: true
    isStage: false
    isProd: false

  vars_files:
        - environments/development/group_vars/route53.yml
  roles:
      - ec2