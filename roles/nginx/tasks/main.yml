
- name: Update system
  become: yes
  command: apt update

- name: Nginx Installation
  become: yes
  command: apt-get --assume-yes install nginx

- name: DEPENDENCIES
  become: yes
  apt: name={{ item }}
  with_items:
        - libpcre3 
        - libpcre3-dev

- name: Install The Nginx
  apt: name=nginx state=present



- name: long form task does not
  lineinfile:
    path: dev-nginx.j2
    regexp: '127.0.0.1'
    line: '0.0.0.0'

- name: copy Nginx from template
  become: yes
  template: src=dev-nginx.j2
            dest=/etc/nginx/nginx.conf
  when: env == 'development'


- name: copy Nginx from template
  become: yes
  template: src=stage-nginx.j2
            dest=/etc/nginx/nginx.conf
  when: env == 'stage'

- name: copy Nginx from template
  become: yes
  template: src=production-nginx.j2
            dest=/etc/nginx/nginx.conf
  when: env == 'production'

#- name: "Curl AWS to get this instance's public IP address"
#  command: curl http://169.254.169.254/latest/meta-data/public-ipv4
#  register: ec2_public_ip
#
#- name: Create DNS records | student
#  become: yes
#  route53:
#    command: create
#    record: "{{ student }}"
#    type: A
#    value: "{{ec2_public_ip.stdout}}"
#    overwrite: yes
#    zone: neols.com
#
#- name: Create DNS records | teacher
#  become: yes
#  route53:
#    command: create
#    record: "{{ teacher }}"
#    type: A
#    value: "{{ec2_public_ip.stdout}}"
#    overwrite: yes
#    zone: neols.com
#
#- name: Create DNS records | principal
#  become: yes
#  route53:
#    command: create
#    record: "{{ principal }}"
#    type: A
#    value: "{{ec2_public_ip.stdout}}"
#    overwrite: yes
#    zone: neols.com
#
#- name: Create DNS records | admin
#  become: yes
#  route53:
#    command: create
#    record: "{{ admin }}"
#    type: A
#    value: "{{ec2_public_ip.stdout}}"
#    overwrite: yes
#    zone: neols.com
#
#- name: Create DNS records | board
#  become: yes
#  route53:
#    command: create
#    record: "{{ board }}"
#    type: A
#    value: "{{ec2_public_ip.stdout}}"
#    overwrite: yes
#    zone: neols.com


- name: restart nginx
  become: yes
  service: name=nginx state=restarted

- name: reload nginx
  become: yes
  service: name=nginx state=reloaded


