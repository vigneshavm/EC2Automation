- name: "Update system"
  become: true
  become_user: root
  command: apt-get --assume-yes update

- name: "Nginx Installation"
  become: true
  become_user: root
  command: apt-get --assume-yes install nginx

- name: "DEPENDENCIES"
  become: true
  become_user: root
  apt: name={{ item }}
  with_items:
        - libpcre3
        - libpcre3-dev

- name: "Install The Nginx"
  become: true
  become_user: root
  apt: name=nginx state=present

- name: "copy Nginx from template"
  become: true
  become_user: root
  template: src=nginx.j2
            dest=/etc/nginx/nginx.conf

- name: "change nginx file - IP change"
  become: true
  become_user: root
  gather_facts: true
  replace:
     dest: /etc/nginx/nginx.conf
     regexp: '127.0.0.1'
     replace:  '{{ launched_webInstanceIP }}'

#domain replacement

- name: "change nginx file - student Domain name"
  become: true
  become_user: root
  gather_facts: true
  replace:
     dest: /etc/nginx/nginx.conf
     regexp: 'exampledevstudents.neols.com'
     replace:  '{{ student }}'

- name: "change nginx file - teacher Domain name"
  become: true
  become_user: root
  gather_facts: true
  replace:
     dest: /etc/nginx/nginx.conf
     regexp: 'exampledevteachers.neols.com'
     replace:  '{{ teacher }}'

- name: "change nginx file - principal Domain name"
  become: true
  become_user: root
  gather_facts: true
  replace:
     dest: /etc/nginx/nginx.conf
     regexp: 'exampledevprincipal.neols.com'
     replace:  '{{ principal }}'

- name: "change nginx file - admin Domain name"
  become: true
  become_user: root
  gather_facts: true
  replace:
     dest: /etc/nginx/nginx.conf
     regexp: 'exampledevadmin.neols.com'
     replace:  '{{ admin }}'

- name: "change nginx file - board Domain name"
  become: true
  become_user: root
  gather_facts: true
  replace:
     dest: /etc/nginx/nginx.conf
     regexp: 'exampledevboard.neols.com'
     replace:  '{{ board }}'

- name: "Curl AWS to get this instance's public IP address"
  command: curl http://169.254.169.254/latest/meta-data/public-ipv4
  register: ec2_public_ip

- name: "Create DNS records | student"
  route53:
    command: create
    record: "{{ student }}"
    type: A
    value: "{{ec2_public_ip.stdout}}"
    overwrite: yes
    zone: neols.com

- name: "Create DNS records | teacher"
  route53:
    command: create
    record: "{{ teacher }}"
    type: A
    value: "{{ec2_public_ip.stdout}}"
    overwrite: yes
    zone: neols.com

- name: "Create DNS records | principal"
  route53:
    command: create
    record: "{{ principal }}"
    type: A
    value: "{{ec2_public_ip.stdout}}"
    overwrite: yes
    zone: neols.com

- name: "Create DNS records | admin"
  route53:
    command: create
    record: "{{ admin }}"
    type: A
    value: "{{ec2_public_ip.stdout}}"
    overwrite: yes
    zone: neols.com

- name: "Create DNS records | board"
  route53:
    command: create
    record: "{{ board }}"
    type: A
    value: "{{ec2_public_ip.stdout}}"
    overwrite: yes
    zone: neols.com

- name: "restart nginx"
  become: true
  become_user: root
  service: name=nginx state=restarted

- name: "reload nginx"
  become: true
  become_user: root
  service: name=nginx state=reloaded
